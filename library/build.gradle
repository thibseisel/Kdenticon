ext {
    groupId = "com.github.thibseisel"
    artifactId = "kdenticon"
    libVersion = "1.0.0-alpha1"
    versionDescription = "KDenticon alpha 1"
}

group groupId
version libVersion

buildscript {
    ext.bintray_version = '1.8.0'
    ext.dokka_version = '0.9.15'

    repositories {
        jcenter()
    }
    dependencies {
        classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:${bintray_version}"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:${dokka_version}"
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.2'
    }
}

apply plugin: 'kotlin'
apply plugin: 'java-library'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'org.jetbrains.dokka'
apply plugin: 'org.junit.platform.gradle.plugin'
apply from: '../bintray.gradle'

junitPlatform {
    filters {
        engines {
            include 'spek'
        }
    }
}

repositories {
    jcenter()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"

    testImplementation "junit:junit:$junit_version"
    testImplementation "org.jetbrains.spek:spek-api:$spek_version"
    testRuntime "org.jetbrains.spek:spek-junit-platform-engine:$spek_version"
}

bintray {
    user = bintray_user
    key = bintray_apikey
    publish = true
    override = true

    pkg {
        repo = 'maven'
        name = artifactId
        configurations = ['archives']

        version {
            name = libVersion
            description = versionDescription
            released = new Date()
        }
    }
}

install {
    repositories.mavenInstaller {
        pom.project {
            packaging 'jar'
            groupId groupId
            artifactId artifactId
            version libVersion
            name artifactId
        }
    }
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.kotlin.srcDirs
}

task dokkaJavadoc(type: org.jetbrains.dokka.gradle.DokkaTask) {
    outputFormat = 'javadoc'
    outputDirectory = "$buildDir/javadoc"
    reportNotDocumented = false
}

task javadocJar(type: Jar, dependsOn: 'dokkaJavadoc') {
    classifier = 'javadoc'
    from fileTree(new File(project.buildDir, 'javadoc'))
}

artifacts {
    archives javadocJar
    archives sourcesJar
}
